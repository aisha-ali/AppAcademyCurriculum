{"version":3,"sources":["./frontend/api_util.js","./frontend/follow_toggle.js","webpack/bootstrap","./frontend/twitter.js"],"names":[],"mappings":";;;;;;;;;AAAA;;AAEA;;AAEA;;AAEA;AACA;AACA,qBAAqB,GAAG;AACxB;AACA;AACA,KAAK;AACL;AACA;;AAEA;;;;;;;;;;;ACfA,gBAAgB,mBAAO,CAAC,0CAAY;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;UCzDA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;ACrBA,qBAAqB,mBAAO,CAAC,oDAAiB;AAC9C,uBAAuB,mBAAO,CAAC,gJAAmB;AAClD,qBAAqB,mBAAO,CAAC,8IAAiB;AAC9C,oBAAoB,mBAAO,CAAC,6IAAgB;;AAE5C;AACA;AACA;AACA;AACA,qEAAqE;AACrE,CAAC","file":"bundle.js","sourcesContent":["const APIUtil = {\n\n  followUser: id => APIUtil.changeFollowStatus(id, 'POST'),\n\n  unfollowUser: id => APIUtil.changeFollowStatus(id, 'DELETE'),\n\n  changeFollowStatus: (id, method) => (\n    $.ajax({\n      url: `/users/${id}/follow`,\n      dataType: 'json',\n      method\n    })\n  ),\n};\n\nmodule.exports = APIUtil;\n","const APIUtil = require('./api_util');\n\nclass FollowToggle {\n  constructor(el, options) {\n    this.$el = $(el);\n    this.userId = this.$el.data('user-id') || options.userId;\n    this.followState = (this.$el.data('initial-follow-state') ||\n      options.followState);\n    this.render();\n\n    this.$el.on('click', this.handleClick.bind(this));\n  }\n\n  handleClick(event) {\n    const followToggle = this;\n\n    event.preventDefault();\n\n    if (this.followState === 'followed') {\n      this.followState = 'unfollowing';\n      this.render();\n      APIUtil.unfollowUser(this.userId).then(() => {\n        followToggle.followState = 'unfollowed';\n        followToggle.render();\n      });\n    } else if (this.followState === 'unfollowed') {\n      this.followState = 'following';\n      this.render();\n      APIUtil.followUser(this.userId).then(() => {\n        followToggle.followState = 'followed';\n        followToggle.render();\n      });\n    }\n  }\n\n  render() {\n    switch (this.followState) {\n      case 'followed':\n        this.$el.prop('disabled', false);\n        this.$el.html('Unfollow!');\n        break;\n      case 'unfollowed':\n        this.$el.prop('disabled', false);\n        this.$el.html('Follow!');\n        break;\n      case 'following':\n        this.$el.prop('disabled', true);\n        this.$el.html('Following...');\n        break;\n      case 'unfollowing':\n        this.$el.prop('disabled', true);\n        this.$el.html('Unfollowing...');\n        break;\n    }\n  }\n}\n\nmodule.exports = FollowToggle;\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const FollowToggle = require('./follow_toggle');\nconst InfiniteTweets = require('./infinite_tweets');\nconst TweetCompose = require('./tweet_compose');\nconst UsersSearch = require('./users_search');\n\n$(function () {\n  $('div.infinite-tweets').each((i, tweet) => new InfiniteTweets(tweet));\n  $('form.tweet-compose').each((i, form) => new TweetCompose(form));\n  $('.users-search').each((i, search) => new UsersSearch(search));\n  $('button.follow-toggle').each((i, btn) => new FollowToggle(btn, {}));\n});\n\n"],"sourceRoot":""}